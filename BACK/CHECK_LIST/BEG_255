ЧЕК-ЛИСТ ДЛЯ ТЕСТИРОВАНИЯ API
============================================
Дата: [23.06.2025] | Тестировщик: [Ионин Семен]

Базовый URL: https://api-test.begy.app
Тестовые данные:
- validUserId = 123 (существующий)
- validRequestId = 456 (существующий)
- invalidId = 999999 (несуществующий)
Ссылка (POSTMAN) коллекция: "https://semenionin.postman.co/workspace/Semen-Ionin's-Workspace~3d38c569-1360-48c7-823a-d38f6d2bca12/collection/44591944-b692c36e-3200-47a5-beea-3310f7c88bc9?action=share&source=copy-link&creator=44591944"
============================================

Общая информация:
ID Билета (JIRA/TFS/etc.): "https://begy.atlassian.net/browse/BEG-255?atlOrigin=eyJpIjoiZmQ2Mjc5MjUwMDI3NDJlZmJiNWUwZmQ5NjE3ZTUwMDYiLCJwIjoiaiJ9"
Браузер/ОС/Устройство: [Windows 11]
Критичность: [Medium]

1. POST /user-requests
============================
[V] 201 Created - успешное создание запроса
[X] Location header - содержит URL созданного ресурса
[V] Тело ответа - содержит полный объект созданного запроса
[V] Автогенерация - id, createdAt, updatedAt генерируются автоматически 

[V] 400 Bad Request - отсутсвуют обязательные поля
[V] 400 Bad Request - невалидные данные (неправильные типы, форматы)
[V] 401 Unauthorized - запрос без авторизации

Тестовые тела запросов:
- Валидное: {"text": "tetst", "type": "default", "extraData": ""}
- Невалидное: {"type": "default"} (нет text)
- Невалидное: {"text": "not_number", "type": "Test"}

2. GET /user-requests
============================
[V] 200 OK - успешное получение списка
[V] Структура ответа - массив объектов с правильными полями
[V] Сортировка - работает sort параметр
[V] Фильтрация - работает по status, userId 

[V] 401 Unauthorized - запрос без авторизации

Параметры для тестирования:
- ?take=2&skip=1
- ?status=created

3. GET /user-requests/{id}
============================
[V] 200 OK - успешное получение одного запроса
[V] Структура ответа - объект с полными данными
[V] Правильность данных - все поля соотвествуют ожидаемым

[X] 404 Not Found - несуществующий ID
    -> Статус код 200, на данный момент, это не критично
[X] 400 Bad Request - невалидный ID
    -> Статус код: 200, на данный момент, это не критично
    "abc" - Статус код 500
[V] 401 Unauthorized - запрос без авторизации

Тестовые ID:
- 456 (валидный)
- 999999 (несуществующий)
- -1 (невалидный)
- "abc" (невалидный)

4. PATCH /back/user-requests/{id}
==================================
[V] 200 OK - успешное обновление
[V] Тело ответа - содержит обновленный объект
[X] Частичное обновление - обновляются только переданные поля
    -> Данный endpoint, меняет одно поле
[V] updatedAt - поле обновляется автоматически

[V] 404 Not Found - несуществующий ID
[V] 400 Bad Request - невалидные данные для обновления
[V] 401 Unauthorized - запрос без авторизации

Тестовые тела для PATCH:
- {"status": "closed"}
- {"status": "clo"}

5. GET /back/user-requests/user/{userId}
=========================================
[V] 200 OK - успешное получение запросов пользователя
[V] Структура ответа - массив объектов
[V] Принадлежность - все запросы имеют правильный userId
[V] Пустой массив - если у пользователя нет запросов

[X] 404 Not Found - несуществующий userId
    -> Статус код 200: возращает пустой массив
[X] 400 Bad Request - невалидный userId
    -> Статус код 200: возращает пустой массив
[V] 401 Unauthorized - запрос без авторизации

Тестовые userId:
- 123 (валидный, с запросами)
- 999999 (несуществующий)
- -1 (невалидный)

6. GET /back/user-requests/{id}
=========================================
[V] 200 OK - успешное получение одного запроса
[V] Структура ответа - объект с полными данными
[V] Правильность данных - все поля соотвествуют ожидаемым

[X] 404 Not Found - несуществующий ID
    -> Статус код 200, на данный момент, это не критично
[X] 400 Bad Request - невалидный ID
    -> Статус код: 200, на данный момент, это не критично
    "abc" - Статус код 500
[V] 401 Unauthorized - запрос без авторизации

Тестовые ID:
- 456 (валидный)
- 999999 (несуществующий)
- -1 (невалидный)
- "abc" (невалидный)

ФУНКЦИОНАЛЬНЫЕ ТЕСТЫ
=====================
Валидация данных:
[ ] Максимальная длина полей - title 255 символов, description 5000 символов
[ ] Enum валидация - status только из разрешенных значений
[ ] Типы данных - число должно быть числом, строка - строкой

    -> На данный момент, не критично

Кэширование (если есть):
[n/a] ETag/If-None-Match - работает
[n/a] Last-Modified/If-Modified-Since - работает

Версионирование API:
[V] Content-Type: application/json
[V] Accept header - поддерживается
[n/a] Версия API в URL - корректно обрабатывается
    -> Есть только одна версия API

Логирование:
[ ] Успешные запросы логируются
[ ] Ошибки логируются с детальной информацией
[ ] Чувствительные данные не логируются

    -> Нет возможности проверить.

СТАТУСЫ ОТВЕТОВ
================
[V] 200 - OK
[V] 201 - Created
[V] 400 - Bad Request
[V] 401 - Unauthorized
[X] 403 - Forbidden
[V] 404 - Not Found
[X] 409 - Conflict
[X] 422 - Unprocessable Entity
[V] 500 - Internal Server Error